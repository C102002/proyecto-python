"""base de datos final

Revision ID: 1cafbbac75cd
Revises: 
Create Date: 2025-07-08 08:01:25.626835

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '1cafbbac75cd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reservation',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_start', sa.Time(), nullable=False),
    sa.Column('date_end', sa.Time(), nullable=False),
    sa.Column('client_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('table_number_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('reservation_date', sa.Date(), nullable=False),
    sa.Column('restaurant_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_reservation_client_id'), 'reservation', ['client_id'], unique=False)
    op.create_index(op.f('ix_reservation_date_end'), 'reservation', ['date_end'], unique=False)
    op.create_index(op.f('ix_reservation_date_start'), 'reservation', ['date_start'], unique=False)
    op.create_index(op.f('ix_reservation_reservation_date'), 'reservation', ['reservation_date'], unique=False)
    op.create_table('restaurant',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lng', sa.Float(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('opening_time', sa.Time(), nullable=False),
    sa.Column('closing_time', sa.Time(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_restaurant_id'), 'restaurant', ['id'], unique=True)
    op.create_table('user',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'CLIENT', name='userroleenum'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('menus',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('restaurant_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_menus_id'), 'menus', ['id'], unique=False)
    op.create_table('table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('location', sa.Enum('terraza', 'interior', 'parque', 'jard_interno', 'jard_externo', name='tablelocationenum'), nullable=False),
    sa.Column('restaurant_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dishes',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('menu_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['menu_id'], ['menus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dishes_id'), 'dishes', ['id'], unique=False)
    op.create_index(op.f('ix_dishes_name'), 'dishes', ['name'], unique=False)
    op.create_table('reservation_dish_association',
    sa.Column('reservation_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('dish_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['dish_id'], ['dishes.id'], ),
    sa.ForeignKeyConstraint(['reservation_id'], ['reservation.id'], ),
    sa.PrimaryKeyConstraint('reservation_id', 'dish_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reservation_dish_association')
    op.drop_index(op.f('ix_dishes_name'), table_name='dishes')
    op.drop_index(op.f('ix_dishes_id'), table_name='dishes')
    op.drop_table('dishes')
    op.drop_table('table')
    op.drop_index(op.f('ix_menus_id'), table_name='menus')
    op.drop_table('menus')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_restaurant_id'), table_name='restaurant')
    op.drop_table('restaurant')
    op.drop_index(op.f('ix_reservation_reservation_date'), table_name='reservation')
    op.drop_index(op.f('ix_reservation_date_start'), table_name='reservation')
    op.drop_index(op.f('ix_reservation_date_end'), table_name='reservation')
    op.drop_index(op.f('ix_reservation_client_id'), table_name='reservation')
    op.drop_table('reservation')
    # ### end Alembic commands ###
